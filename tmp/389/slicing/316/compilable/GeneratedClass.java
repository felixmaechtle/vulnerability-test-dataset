import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.cggh.tools.dataMerger.files.filebases.FilebaseModel;
import org.cggh.tools.dataMerger.scripts.files.filebases.FilebaseScripts;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String[] var5 = var0.getHeader("Accept").split(",");
    List var6 = Arrays.asList(var5);
    if (var6.contains("text/plain")) {
        var1.setContentType("text/plain");
        ServletContext var11 = var0.getSession().getServletContext();
        Object var12 = new Object();
        var12 = new Object();
        var12 = new Object();
        String var22 = var11.getInitParameter("fileRepositoryBasePath");
        var12 = new Object();
        var12 = new Object();
        var12 = new Object();
        File var10000 = new File(var22);
        File var54 = var10000;
        if (var54.exists()) return;
        var12 = new Object();
        if (var54.canWrite()) return;
        var12 = new Object();
        if (var54.canRead()) {
            Boolean var27 = Boolean.valueOf(true);
            var12 = new Object();
            String[] var29 = var54.list();
            int var30 = 0;
            if (var30 < var29.length) { {}
}
            var12 = new Object();
            var12 = new Object();
            if (var27.booleanValue()) {
                var12 = new Object();
                var12 = new Object();
                var12 = new Object();
            }
            var12 = new Object();
            var12 = new Object();
            FilebaseScripts var51 = new FilebaseScripts();
            FilebaseScripts var45 = var51;
            String var44 = var45.deleteFilebaseUsingFilebaseModel((FilebaseModel) var12);
            PrintWriter var52 = var1.getWriter();
            var52.print(var44);
        }
    }
}

}