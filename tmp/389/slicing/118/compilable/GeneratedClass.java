import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.cggh.tools.dataMerger.files.filebases.FilebaseModel;
import org.cggh.tools.dataMerger.scripts.files.filebases.FilebaseScripts;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String[] var5 = var0.getHeader("Accept").split(",");
    List var6 = Arrays.asList(var5);
    if (var6.contains("text/plain")) {
        var1.setContentType("text/plain");
        ServletContext var11 = var0.getSession().getServletContext();
        Object var12 = new Object();
        var12 = new Object();
        var12 = new Object();
        String var22 = var11.getInitParameter("fileRepositoryBasePath");
        var12 = new Object();
        String var23 = var11.getInitParameter("fileRepositoryInstallationLogPathRelativeToRepositoryBasePath");
        var12 = new Object();
        var12 = new Object();
        File var10000 = new File(var22);
        File var59 = var10000;
        if (var59.exists()) {
            var12 = new Object();
            var12 = new Object();
            Boolean var27 = Boolean.valueOf(false);
            var12 = new Object();
            var12 = new Object();
            String var43;
            if (var27.booleanValue()) {
                StringBuilder var10002 = new StringBuilder();
                var12 = new Object();
                var10002 = var10002.append(var22);
                var12 = new Object();
                String var57 = var10002.append(var23).toString();
                FileInputStream var50 = new FileInputStream(var57);
                FileInputStream var60 = var50;
                DataInputStream var51 = new DataInputStream(var60);
                DataInputStream var61 = var51;
                InputStreamReader var52 = new InputStreamReader(var61);
                InputStreamReader var62 = var52;
                BufferedReader var53 = new BufferedReader(var62);
                BufferedReader var63 = var53;
                String var35 = var63.readLine();
                if (var35 == null) { {}
}
                HashMap var54 = new HashMap();
                HashMap var64 = var54;
                String var38 = null;
                if ((var38 = var63.readLine()) != null) { {}
}
                StringBuilder var55 = new StringBuilder();
                var43 = var55.append((String) var64.get("major_version_number")).append(".").append((String) var64.get("minor_version_number")).append(".").append((String) var64.get("revision_version_number")).toString();
                var12 = new Object();
            }
            var43 = System.getProperty("os.name").toLowerCase();
            if (var43.indexOf("nix") < 0) {
                if (var43.indexOf("nux") >= 0) return;
                if (var43.indexOf("mac") >= 0) return;
                if (var43.indexOf("win") >= 0) {
                    var12 = new Object();
                    var12 = new Object();
                }
                FilebaseScripts var56 = new FilebaseScripts();
                FilebaseScripts var49 = var56;
                String var48 = var49.deleteFilebaseUsingFilebaseModel((FilebaseModel) var12);
                PrintWriter var58 = var1.getWriter();
                var58.print(var48);
            }
        }
    }
}

}