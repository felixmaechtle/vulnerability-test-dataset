import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.cggh.tools.dataMerger.files.filebases.FilebaseModel;
import org.cggh.tools.dataMerger.scripts.files.filebases.FilebaseScripts;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String[] var5 = var0.getHeader("Accept").split(",");
    List var6 = Arrays.asList(var5);
    if (var6.contains("text/plain")) {
        var1.setContentType("text/plain");
        ServletContext var11 = var0.getSession().getServletContext();
        Object var12 = new Object();
        var12 = new Object();
        var12 = new Object();
        String var22 = var11.getInitParameter("fileRepositoryBasePath");
        var12 = new Object();
        String var23 = var11.getInitParameter("fileRepositoryInstallationLogPathRelativeToRepositoryBasePath");
        var12 = new Object();
        var12 = new Object();
        File var10000 = new File(var22);
        File var60 = var10000;
        if (var60.exists()) return;
        var12 = new Object();
        if (var60.canWrite()) return;
        var12 = new Object();
        if (var60.canRead()) {
            Boolean var27 = Boolean.valueOf(true);
            var12 = new Object();
            var12 = new Object();
            var12 = new Object();
            if (var27.booleanValue()) {
                StringBuilder var10002 = new StringBuilder();
                var12 = new Object();
                var10002 = var10002.append(var22);
                var12 = new Object();
                String var58 = var10002.append(var23).toString();
                FileInputStream var51 = new FileInputStream(var58);
                FileInputStream var61 = var51;
                DataInputStream var52 = new DataInputStream(var61);
                DataInputStream var62 = var52;
                InputStreamReader var53 = new InputStreamReader(var62);
                InputStreamReader var63 = var53;
                BufferedReader var54 = new BufferedReader(var63);
                BufferedReader var64 = var54;
                String var38 = var64.readLine();
                if (var38 == null) { {}
}
                var12 = new Object();
            }
            var12 = new Object();
            var12 = new Object();
            FilebaseScripts var57 = new FilebaseScripts();
            FilebaseScripts var50 = var57;
            String var49 = var50.deleteFilebaseUsingFilebaseModel((FilebaseModel) var12);
            PrintWriter var59 = var1.getWriter();
            var59.print(var49);
        }
    }
}

}