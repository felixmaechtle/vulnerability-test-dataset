import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.cggh.tools.dataMerger.files.filebases.FilebaseModel;
import org.cggh.tools.dataMerger.scripts.files.filebases.FilebaseScripts;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String[] var5 = var0.getHeader("Accept").split(",");
    List var6 = Arrays.asList(var5);
    if (var6.contains("text/plain")) {
        ServletContext var11 = var0.getSession().getServletContext();
        String var22 = var11.getInitParameter("fileRepositoryBasePath");
        String var23 = var11.getInitParameter("fileRepositoryInstallationLogPathRelativeToRepositoryBasePath");
        File var10000 = new File(var22);
        File var61 = var10000;
        if (var61.exists()) return;
        if (var61.canWrite()) {
            if (var61.canRead()) {
                Boolean var27 = Boolean.valueOf(true);
                String var46;
                if (var27.booleanValue()) {
                    StringBuilder var10002 = new StringBuilder();
                    var10002 = var10002.append(var22);
                    String var59 = var10002.append(var23).toString();
                    FileInputStream var52 = new FileInputStream(var59);
                    FileInputStream var62 = var52;
                    DataInputStream var53 = new DataInputStream(var62);
                    DataInputStream var63 = var53;
                    InputStreamReader var54 = new InputStreamReader(var63);
                    InputStreamReader var64 = var54;
                    BufferedReader var55 = new BufferedReader(var64);
                    BufferedReader var65 = var55;
                    String var38 = var65.readLine();
                    if (var38 == null) { {}
}
                    HashMap var56 = new HashMap();
                    HashMap var66 = var56;
                    String var41 = null;
                    if ((var41 = var65.readLine()) != null) { {}
}
                    StringBuilder var57 = new StringBuilder();
                    var46 = var57.append((String) var66.get("major_version_number")).append(".").append((String) var66.get("minor_version_number")).append(".").append((String) var66.get("revision_version_number")).toString();
                }
                var46 = System.getProperty("os.name").toLowerCase();
                if (var46.indexOf("nix") < 0) {
                    if (var46.indexOf("nux") >= 0) return;
                    if (var46.indexOf("mac") >= 0) { {}
}
                }
            }
        }
    }
}

}