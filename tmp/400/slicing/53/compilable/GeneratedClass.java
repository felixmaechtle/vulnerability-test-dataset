import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.MongoClient;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.lang.reflect.Field;
import java.net.URL;
import java.util.zip.GZIPInputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.bson.types.ObjectId;
import sg.edu.nus.StackOverflow.model.User;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String var14 = var0.getParameter("min");
    String var15 = var0.getParameter("max");
    Object var16 = null;
    Integer var19;
    if (var14 != null) {
        var19 = Integer.valueOf(Integer.parseInt(var14));
    Integer var20;
    if (var15 != null) {
        var20 = Integer.valueOf(Integer.parseInt(var15));
    int var21 = var20.intValue();
    if (var21 >= var19.intValue()) {
        Integer var22 = Integer.valueOf(var21);
        StringBuilder var74 = new StringBuilder("http://api.stackexchange.com/2.2/users?order=desc&sort=reputation&site=stackoverflow");
        StringBuilder var82 = var74;
        int var28;
        if (var16 != null) {
            var28 = Math.max(100, ((Integer) var16).intValue());
        StringBuilder var10001 = new StringBuilder();
        var82.append(var10001.append("&pagesize=").append(var28).toString());
        if (var19 != null) {
            var10001 = new StringBuilder();
            var82.append(var10001.append("&min=").append(var19).toString());
        if (var22 != null) {
            var10001 = new StringBuilder();
            var82.append(var10001.append("&max=").append(var22).toString());
        String var36 = var82.toString();
        URL var75 = new URL(var36);
        URL var84 = var75;
        InputStream var41 = var84.openStream();

}
}
}
}
}
}
}
}