import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.MongoClient;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.lang.reflect.Field;
import java.net.URL;
import java.util.zip.GZIPInputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.bson.types.ObjectId;
import sg.edu.nus.StackOverflow.model.User;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    Object var16 = null;
    Object var17 = null;
    Object var18 = null;
    int var19 = ((Integer) var18).intValue();
    if (var19 >= ((Integer) var17).intValue()) {
        StringBuilder var84 = new StringBuilder("http://api.stackexchange.com/2.2/users?order=desc&sort=reputation&site=stackoverflow");
        StringBuilder var90 = var84;
        int var30;
        if (var16 != null) {
            var30 = Math.max(100, ((Integer) var16).intValue());
        StringBuilder var10001 = new StringBuilder();
        var90.append(var10001.append("&pagesize=").append(var30).toString());
        String var34 = var90.toString();
        URL var79 = new URL(var34);
        URL var92 = var79;
        GZIPInputStream var80 = new GZIPInputStream(var92.openStream());

}
}
}
}