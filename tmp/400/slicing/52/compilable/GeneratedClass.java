import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.MongoClient;
import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.lang.reflect.Field;
import java.net.URL;
import java.util.zip.GZIPInputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.bson.types.ObjectId;
import sg.edu.nus.StackOverflow.model.User;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String var14 = var0.getParameter("min");
    Object var18 = null;
    Integer var20;
    if (var14 != null) {
        var20 = Integer.valueOf(Integer.parseInt(var14));
    int var21 = ((Integer) var18).intValue();
    if (var21 >= var20.intValue()) {
        StringBuilder var72 = new StringBuilder("http://api.stackexchange.com/2.2/users?order=desc&sort=reputation&site=stackoverflow");
        StringBuilder var80 = var72;
        byte var27 = 100;
        StringBuilder var10001 = new StringBuilder();
        var80.append(var10001.append("&pagesize=").append(var27).toString());
        if (var20 != null) {
            var10001 = new StringBuilder();
            var80.append(var10001.append("&min=").append(var20).toString());
        String var33 = var80.toString();
        URL var71 = new URL(var33);
        URL var82 = var71;
        GZIPInputStream var73 = new GZIPInputStream(var82.openStream());

}
}
}
}
}