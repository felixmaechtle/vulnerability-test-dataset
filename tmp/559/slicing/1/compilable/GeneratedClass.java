import java.lang.reflect.Method;
import javax.servlet.RequestDispatcher;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    Object var2 = new Object();
    var2 = new Object();
    String var5 = var0.getRequestURI().substring(var0.getContextPath().length());
    String var6 = var5.split("/")[1];
    String var7 = var5.split("/")[2];
    var7 = var7.substring(0, var7.length() - 3);
    StringBuilder var10000 = new StringBuilder();
    var6 = var10000.append("service.").append(var6).toString();
    Object var10 = null;
    var10 = Class.forName(var6).newInstance();
    Method var12 = null;
    var12 = ((Object) var10).getClass().getDeclaredMethod(var7, HttpServletRequest.class, HttpServletResponse.class);
    String var14 = null;
    var14 = (String) (Object) var12.invoke(var10, var0, var1);
    RequestDispatcher var15 = ((HttpServlet) var2).getServletContext().getRequestDispatcher(var14);
    var15.forward(var0, var1);
}

}