import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import tk.jimmywang.weichat.service.MessageService;
import tk.jimmywang.weichat.service.ProcessService;
public class GeneratedClass {
public static void trace(HttpServletRequest var0) throws Throwable {
    Logger var4 = LoggerFactory.getLogger(ProcessService.class);
    HashMap var40 = new HashMap();
    HashMap var38 = var40;
    ServletInputStream var7 = var0.getInputStream();
    SAXReader var41 = new SAXReader();
    SAXReader var39 = var41;
    Document var9 = var39.read(var7);
    Element var10 = var9.getRootElement();
    List var11 = var10.elements();
    Iterator var12 = var11.iterator();
    if (var12.hasNext()) {
        Element var13 = (Element) (Object) var12.next();
        var38.put(var13.getName(), var13.getText());
    }
    String var15 = (String) (Object) var38.get("FromUserName");
    String var16 = (String) (Object) var38.get("ToUserName");
    String var17 = (String) (Object) var38.get("MsgType");
    StringBuilder var10001 = new StringBuilder();
    String var42 = var10001.append("[msgType]").append(var17).toString();
    var4.info(var42);
    if (var17.equals("text")) {
        String var20 = (String) (Object) var38.get("Content");
        if (var20 != null && !"".equals(var20)) { {}
}
    }
}

}