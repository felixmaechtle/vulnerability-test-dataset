import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import tk.jimmywang.weichat.service.MessageService;
import tk.jimmywang.weichat.service.ProcessService;
public class GeneratedClass {
public static void trace(HttpServletRequest var0) throws Throwable {
    Logger var4 = LoggerFactory.getLogger(ProcessService.class);
    HashMap var43 = new HashMap();
    HashMap var41 = var43;
    ServletInputStream var7 = var0.getInputStream();
    SAXReader var44 = new SAXReader();
    SAXReader var42 = var44;
    Document var9 = var42.read(var7);
    Element var10 = var9.getRootElement();
    List var11 = var10.elements();
    Iterator var12 = var11.iterator();
    if (var12.hasNext()) {
        Element var13 = (Element) (Object) var12.next();
        var41.put(var13.getName(), var13.getText());
    }
    String var15 = (String) (Object) var41.get("FromUserName");
    String var16 = (String) (Object) var41.get("ToUserName");
    String var17 = (String) (Object) var41.get("MsgType");
    StringBuilder var10001 = new StringBuilder();
    String var45 = var10001.append("[msgType]").append(var17).toString();
    var4.info(var45);
    if (var17.equals("text")) {
        String var20 = (String) (Object) var41.get("Content");
        if (var20 != null && !"".equals(var20)) {
            StringBuffer var10003 = new StringBuffer("");
            StringBuffer var48 = var10003;
            int var32 = 0;
            if (var32 < var20.length()) {
                String var33 = var20.substring(var32, var32 + 1);
                if (!var33.equals("ã€€")) { {}
}
                var48.append(" ");
            }
            if ("?".equals(var48.toString())) { {}
}
        }
    }
}

}