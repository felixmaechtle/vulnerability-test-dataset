import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
import java.io.PrintWriter;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import tk.jimmywang.weichat.controller.WeiChatApiController;
import tk.jimmywang.weichat.service.MessageService;
import tk.jimmywang.weichat.service.ProcessService;
import tk.jimmywang.weichat.service.ProcessService;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    Logger var3 = LoggerFactory.getLogger(WeiChatApiController.class);
    var0.setCharacterEncoding("utf-8");
    Object var10002 = new Object();
    XStream var10000 = new XStream((HierarchicalStreamDriver) var10002);
    XStream var33 = var10000;
    HashMap var36 = new HashMap();
    HashMap var34 = var36;
    ServletInputStream var11 = var0.getInputStream();
    SAXReader var37 = new SAXReader();
    SAXReader var35 = var37;
    Document var13 = var35.read(var11);
    Element var14 = var13.getRootElement();
    List var15 = var14.elements();
    Iterator var16 = var15.iterator();
    if (var16.hasNext()) {
        Element var17 = (Element) (Object) var16.next();
        var34.put(var17.getName(), var17.getText());
    }
    String var19 = (String) (Object) var34.get("FromUserName");
    String var20 = (String) (Object) var34.get("ToUserName");
    String var21 = (String) (Object) var34.get("MsgType");
    StringBuilder var10001 = new StringBuilder();
    String var38 = var10001.append("[msgType]").append(var21).toString();
    if (var21.equals("text")) return;
    if (var21.equals("image")) {
        Object var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var24 = new Object();
        var33.alias("xml", ((Object) var24).getClass());
        String var31 = var33.toXML(var24);
        StringBuilder var40 = new StringBuilder();
        String var41 = var40.append("[processRequest]\n").append(var31).toString();
        var3.info(var41);
    }
}

}