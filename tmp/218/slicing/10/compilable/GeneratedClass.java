import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.HierarchicalStreamDriver;
import java.io.PrintWriter;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import tk.jimmywang.weichat.controller.WeiChatApiController;
import tk.jimmywang.weichat.service.MessageService;
import tk.jimmywang.weichat.service.ProcessService;
import tk.jimmywang.weichat.service.ProcessService;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    var0.setCharacterEncoding("utf-8");
    Logger var8 = LoggerFactory.getLogger(ProcessService.class);
    HashMap var47 = new HashMap();
    HashMap var45 = var47;
    ServletInputStream var11 = var0.getInputStream();
    SAXReader var48 = new SAXReader();
    SAXReader var46 = var48;
    Document var13 = var46.read(var11);
    Element var14 = var13.getRootElement();
    List var15 = var14.elements();
    Iterator var16 = var15.iterator();
    if (var16.hasNext()) {
        Element var17 = (Element) (Object) var16.next();
        var45.put(var17.getName(), var17.getText());
    }
    String var19 = (String) (Object) var45.get("FromUserName");
    String var20 = (String) (Object) var45.get("ToUserName");
    String var21 = (String) (Object) var45.get("MsgType");
    StringBuilder var10001 = new StringBuilder();
    String var49 = var10001.append("[msgType]").append(var21).toString();
    var8.info(var49);
    if (var21.equals("text")) {
        String var24 = (String) (Object) var45.get("Content");
        if (var24 != null && !"".equals(var24)) {
            StringBuffer var10003 = new StringBuffer("");
            StringBuffer var52 = var10003;
            if (!"?".equals(var52.toString())) { {}
}
        }
    }
}

}