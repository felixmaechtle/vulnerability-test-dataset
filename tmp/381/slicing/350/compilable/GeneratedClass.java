import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String[] var5 = var0.getHeader("Accept").split(",");
    List var6 = Arrays.asList(var5);
    if (var6.contains("text/plain")) {
        var1.setContentType("text/plain");
        ServletContext var11 = var0.getSession().getServletContext();
        String var22 = var11.getInitParameter("fileRepositoryBasePath");
        String var23 = var11.getInitParameter("fileRepositoryInstallationLogPathRelativeToRepositoryBasePath");
        File var10000 = new File(var22);
        File var56 = var10000;
        if (var56.exists()) {
            if (var56.canWrite()) {
                Boolean var27 = Boolean.valueOf(false);
                String var41;
                if (var27.booleanValue()) {
                    StringBuilder var10002 = new StringBuilder();
                    var10002 = var10002.append(var22);
                    String var54 = var10002.append(var23).toString();
                    FileInputStream var48 = new FileInputStream(var54);
                    FileInputStream var57 = var48;
                    DataInputStream var49 = new DataInputStream(var57);
                    DataInputStream var58 = var49;
                    InputStreamReader var50 = new InputStreamReader(var58);
                    InputStreamReader var59 = var50;
                    BufferedReader var51 = new BufferedReader(var59);
                    BufferedReader var60 = var51;
                    String var35 = var60.readLine();
                    if (var35 == null) { {}
}
                    HashMap var52 = new HashMap();
                    HashMap var61 = var52;
                    StringBuilder var53 = new StringBuilder();
                    var41 = var53.append((String) var61.get("major_version_number")).append(".").append((String) var61.get("minor_version_number")).append(".").append((String) var61.get("revision_version_number")).toString();
                }
                var41 = System.getProperty("os.name").toLowerCase();
                if (var41.indexOf("nix") < 0) {
                    if (var41.indexOf("nux") >= 0) return;
                    if (var41.indexOf("mac") >= 0) {
                        String var46 = "Failed to create filebase directory.";
                        PrintWriter var55 = var1.getWriter();
                        var55.print(var46);
                    }
                }
            }
        }
    }
}

}