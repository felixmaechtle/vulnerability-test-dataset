import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Logger;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class GeneratedClass {
public static void trace(HttpServletRequest var0, HttpServletResponse var1) throws Throwable {
    String[] var5 = var0.getHeader("Accept").split(",");
    List var6 = Arrays.asList(var5);
    if (var6.contains("text/plain")) {
        ServletContext var11 = var0.getSession().getServletContext();
        String var22 = var11.getInitParameter("fileRepositoryBasePath");
        String var23 = var11.getInitParameter("fileRepositoryInstallationLogPathRelativeToRepositoryBasePath");
        File var10000 = new File(var22);
        File var59 = var10000;
        if (var59.exists()) {
            if (var59.canWrite()) {
                if (var59.canRead()) {
                    Boolean var27 = Boolean.valueOf(true);
                    String var44;
                    if (var27.booleanValue()) {
                        StringBuilder var10002 = new StringBuilder();
                        var10002 = var10002.append(var22);
                        String var57 = var10002.append(var23).toString();
                        FileInputStream var51 = new FileInputStream(var57);
                        FileInputStream var60 = var51;
                        DataInputStream var52 = new DataInputStream(var60);
                        DataInputStream var61 = var52;
                        InputStreamReader var53 = new InputStreamReader(var61);
                        InputStreamReader var62 = var53;
                        BufferedReader var54 = new BufferedReader(var62);
                        BufferedReader var63 = var54;
                        String var38 = var63.readLine();
                        if (var38 == null) { {}
}
                        HashMap var55 = new HashMap();
                        HashMap var64 = var55;
                        StringBuilder var56 = new StringBuilder();
                        var44 = var56.append((String) var64.get("major_version_number")).append(".").append((String) var64.get("minor_version_number")).append(".").append((String) var64.get("revision_version_number")).toString();
                    }
                    var44 = System.getProperty("os.name").toLowerCase();
                    if (var44.indexOf("nix") >= 0 || var44.indexOf("nux") >= 0) {
                        var10000 = new File(var22);
                        File var50 = var10000;
                        if (var50.mkdirs()) { {}
}
                    }
                }
            }
        }
    }
}

}